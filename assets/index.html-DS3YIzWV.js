import{_ as i,c as l,b as o,d as e,e as t,r as s,o as p}from"./app-B4ALHgv8.js";const g={},a={href:"https://en.wikipedia.org/wiki/Niklaus_Wirth",target:"_blank",rel:"noopener noreferrer"},k={href:"https://en.wikipedia.org/wiki/Pascal_(programming_language)",target:"_blank",rel:"noopener noreferrer"},d={href:"https://en.wikipedia.org/wiki/Modula-2",target:"_blank",rel:"noopener noreferrer"},f={href:"https://en.wikipedia.org/wiki/Oberon_(programming_language)",target:"_blank",rel:"noopener noreferrer"},u={href:"https://en.wikipedia.org/wiki/Oberon-2_(programming_language)",target:"_blank",rel:"noopener noreferrer"},m={href:"https://en.wikipedia.org/wiki/Oberon_(programming_language)",target:"_blank",rel:"noopener noreferrer"},b={href:"https://en.wikipedia.org/wiki/Tony_Hoare",target:"_blank",rel:"noopener noreferrer"},w={href:"https://en.wikipedia.org/wiki/Communicating_sequential_processes",target:"_blank",rel:"noopener noreferrer"},C={href:"https://en.wikipedia.org/wiki/Communicating_sequential_processes",target:"_blank",rel:"noopener noreferrer"},P={href:"https://en.wikipedia.org/wiki/Communicating_sequential_processes",target:"_blank",rel:"noopener noreferrer"},q={href:"https://en.wikipedia.org/wiki/Tony_Hoare",target:"_blank",rel:"noopener noreferrer"},G={href:"https://en.wikipedia.org/wiki/Communicating_sequential_processes",target:"_blank",rel:"noopener noreferrer"},x={href:"https://en.wikipedia.org/wiki/Communicating_sequential_processes",target:"_blank",rel:"noopener noreferrer"},N={href:"https://en.wikipedia.org/wiki/Communicating_sequential_processes",target:"_blank",rel:"noopener noreferrer"},S={href:"http://doc.cat-v.org/bell_labs/squeak/",target:"_blank",rel:"noopener noreferrer"},v={href:"http://doc.cat-v.org/bell_labs/squeak/",target:"_blank",rel:"noopener noreferrer"},O={href:"https://en.wikipedia.org/wiki/Pascal_(programming_language)",target:"_blank",rel:"noopener noreferrer"},A={href:"http://doc.cat-v.org/plan_9/2nd_edition/papers/alef/",target:"_blank",rel:"noopener noreferrer"},T={href:"http://doc.cat-v.org/inferno/4th_edition/limbo_language/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://en.wikipedia.org/wiki/APL_(programming_language)",target:"_blank",rel:"noopener noreferrer"},E={href:"https://en.wikipedia.org/wiki/Scheme_(programming_language)",target:"_blank",rel:"noopener noreferrer"};function L(H,r){const n=s("ExternalLinkIcon");return p(),l("div",null,[r[49]||(r[49]=o("h2",{id:"go语言起源",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#go语言起源"},[o("span",null,"Go语言起源")])],-1)),r[50]||(r[50]=o("p",null,"编程语言的演化跟生物物种的演化类似，一个成功的编程语言的后代一般都会继承它们祖先的优点；当然有时多种语言杂合也可能会产生令人惊讶的特性；还有一些激进的新特性可能并没有先例。通过观察这些影响，我们可以学到为什么一门语言是这样子的，它已经适应了怎样的环境。",-1)),r[51]||(r[51]=o("p",null,"下图展示了有哪些早期的编程语言对Go语言的设计产生了重要影响。",-1)),r[52]||(r[52]=o("p",null,[o("img",{src:"http://image.alane.top/tp/ch0-01.png",alt:"img"})],-1)),r[53]||(r[53]=o("p",null,"Go语言有时候被描述为“C类似语言”，或者是“21世纪的C语言”。Go从C语言继承了相似的表达式语法、控制流结构、基础数据类型、调用参数传值、指针等很多思想，还有C语言一直所看中的编译后机器码的运行效率以及和现有操作系统的无缝适配。",-1)),o("p",null,[r[6]||(r[6]=e("但是在Go语言的家族树中还有其它的祖先。其中一个有影响力的分支来自")),o("a",a,[r[0]||(r[0]=e("Niklaus Wirth")),t(n)]),r[7]||(r[7]=e("所设计的")),o("a",k,[r[1]||(r[1]=e("Pascal")),t(n)]),r[8]||(r[8]=e("语言。然后")),o("a",d,[r[2]||(r[2]=e("Modula-2")),t(n)]),r[9]||(r[9]=e("语言激发了包的概念。然后")),o("a",f,[r[3]||(r[3]=e("Oberon")),t(n)]),r[10]||(r[10]=e("语言摒弃了模块接口文件和模块实现文件之间的区别。第二代的")),o("a",u,[r[4]||(r[4]=e("Oberon-2")),t(n)]),r[11]||(r[11]=e("语言直接影响了包的导入和声明的语法，还有")),o("a",m,[r[5]||(r[5]=e("Oberon")),t(n)]),r[12]||(r[12]=e("语言的面向对象特性所提供的方法的声明语法等。"))]),o("p",null,[r[19]||(r[19]=e("Go语言的另一支祖先，带来了Go语言区别其他语言的重要特性，灵感来自于贝尔实验室的")),o("a",b,[r[13]||(r[13]=e("Tony Hoare")),t(n)]),r[20]||(r[20]=e("于1978年发表的鲜为外界所知的关于并发研究的基础文献 ")),r[21]||(r[21]=o("em",null,"顺序通信进程",-1)),r[22]||(r[22]=e(" （ ")),o("em",null,[o("a",w,[r[14]||(r[14]=e("communicating sequential processes")),t(n)])]),r[23]||(r[23]=e(" ，缩写为")),o("a",C,[r[15]||(r[15]=e("CSP")),t(n)]),r[24]||(r[24]=e("。在")),o("a",P,[r[16]||(r[16]=e("CSP")),t(n)]),r[25]||(r[25]=e("中，程序是一组中间没有共享状态的平行运行的处理过程，它们之间使用管道进行通信和控制同步。不过")),o("a",q,[r[17]||(r[17]=e("Tony Hoare")),t(n)]),r[26]||(r[26]=e("的")),o("a",G,[r[18]||(r[18]=e("CSP")),t(n)]),r[27]||(r[27]=e("只是一个用于描述并发性基本概念的描述语言，并不是一个可以编写可执行程序的通用编程语言。"))]),o("p",null,[r[33]||(r[33]=e("接下来，Rob Pike和其他人开始不断尝试将")),o("a",x,[r[28]||(r[28]=e("CSP")),t(n)]),r[34]||(r[34]=e("引入实际的编程语言中。他们第一次尝试引入")),o("a",N,[r[29]||(r[29]=e("CSP")),t(n)]),r[35]||(r[35]=e("特性的编程语言叫")),o("a",S,[r[30]||(r[30]=e("Squeak")),t(n)]),r[36]||(r[36]=e("（老鼠间交流的语言），是一个提供鼠标和键盘事件处理的编程语言，它的管道是静态创建的。然后是改进版的")),o("a",v,[r[31]||(r[31]=e("Newsqueak")),t(n)]),r[37]||(r[37]=e("语言，提供了类似C语言语句和表达式的语法和类似")),o("a",O,[r[32]||(r[32]=e("Pascal")),t(n)]),r[38]||(r[38]=e("语言的推导语法。Newsqueak是一个带垃圾回收的纯函数式语言，它再次针对键盘、鼠标和窗口事件管理。但是在Newsqueak语言中管道是动态创建的，属于第一类值，可以保存到变量中。"))]),o("p",null,[r[41]||(r[41]=e("在Plan9操作系统中，这些优秀的想法被吸收到了一个叫")),o("a",A,[r[39]||(r[39]=e("Alef")),t(n)]),r[42]||(r[42]=e("的编程语言中。Alef试图将Newsqueak语言改造为系统编程语言，但是因为缺少垃圾回收机制而导致并发编程很痛苦。（译注：在Alef之后还有一个叫")),o("a",T,[r[40]||(r[40]=e("Limbo")),t(n)]),r[43]||(r[43]=e("的编程语言，Go语言从其中借鉴了很多特性。 具体请参考Pike的讲稿：http://talks.golang.org/2012/concurrency.slide#9 ）"))]),o("p",null,[r[46]||(r[46]=e("Go语言的其他的一些特性零散地来自于其他一些编程语言；比如iota语法是从")),o("a",y,[r[44]||(r[44]=e("APL")),t(n)]),r[47]||(r[47]=e("语言借鉴，词法作用域与嵌套函数来自于")),o("a",E,[r[45]||(r[45]=e("Scheme")),t(n)]),r[48]||(r[48]=e("语言（和其他很多语言）。当然，我们也可以从Go中发现很多创新的设计。比如Go语言的切片为动态数组提供了有效的随机存取的性能，这可能会让人联想到链表的底层的共享机制。还有Go语言新发明的defer语句。"))])])}const M=i(g,[["render",L]]),R=JSON.parse('{"path":"/blogs/xuexi/go/","title":"go","lang":"en-US","frontmatter":{"title":"go","date":"2020-11-27T00:00:00.000Z"},"headers":[{"level":2,"title":"Go语言起源","slug":"go语言起源","link":"#go语言起源","children":[]}],"git":{},"filePathRelative":"blogs/学习/go/README.md"}');export{M as comp,R as data};
